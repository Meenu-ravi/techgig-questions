def minimumCost(a):
    sum = a[0][0]
    s = len(a)
    k = 0
    n = 0
##    for i in range(s):
##        print a[i]
    while k != (s-1) and n != (s-1):
        pos = a[k][n]
        if a[k+1][n+1] <=  a[k][n+1] and a[k+1][n+1] <= a[k+1][n]:
            sum = sum + a[k+1][n+1]
            k = k+1
            n = n+1
        elif a[k][n+1] <= a[k+1][n+1] and a[k][n+1] <= a[k+1][n]:              
            sum = sum + a[k][n+1]
            k = k
            n = n+1
        elif a[k+1][n] <= a[k+1][n+1] and a[k+1][n] <= a[k][n+1]:
            sum = sum + a[k+1][n]
            k = k+1
            n = n
    else:
        if k == (s-1):
            while n != s-1:
                sum = sum + a[k][n+1]
                n = n+1
            print "Sum: %d" % sum
        elif n == (s-1):
            print "inside elif"
            while k != s-1:
                sum = sum + a[k+1][n]
                k = k+1
            print "Sum: %d" % sum
                
if __name__ == '__main__':
    #inp = '{{5,7,2,4,2},{1,8,1,3,3},{6,2,9,5,4},{1,6,2,5,5},{3,4,8,5,1}}'
    #inp = '{{5,7,2,4,2},{1,8,1,3,3},{6,2,9,5,4},{1,6,2,8,5},{3,4,5,6,1}}'
    #inp = '{{5,7,2,4,2},{1,8,1,3,3},{6,2,9,5,4},{1,6,2,7,5},{3,4,5,8,1}}'
    inp = '{{5,7,2,4},{1,8,1,3},{6,2,9,5},{1,6,2,8}}'
    inp = inp.replace('{','[').replace('}',']')
    inp = eval(inp)
    minimumCost(inp)

Sample input:
inp = '{{5,7,2,4},{1,8,1,3},{6,2,9,5},{1,6,2,8}}'
When it is written as matrix:
[5, 7, 2, 4]
[1, 8, 1, 3]
[6, 2, 9, 5]
[1, 6, 2, 8]

Output:
Sum: 18
